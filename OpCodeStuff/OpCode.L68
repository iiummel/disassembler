00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.14.00
Created On: 3/1/2014 6:51:12 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  Team Bits Disassembler
00000000                             3  * Written by :  Himanshu Mehru, William Tanna, Igor Ummel
00000000                             4  * Date       :  Who cares? Our code is timeless mofo.
00000000                             5  * Description:  Bish, you know what the fuck dis shiit izz.
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  
00001000                             9      
00001000  43F9 00001084             10              LEA        INTRO,A1         Display intro message
00001006  103C 000E                 11              MOVE.B     #14,D0
0000100A  4E4F                      12              TRAP       #15
0000100C                            13   
0000100C  6000 0006                 14              BRA        START_ADDR       Branch to request starting address
00001010                            15  
00001010  FFFF FFFF                 16      SIMHALT             ; halt simulator
00001014                            17  
00001014  43F9 000010A9             18  START_ADDR  LEA        ST_ADDR_MSG,A1   Display starting address message
0000101A  103C 000E                 19              MOVE.B     #14,D0
0000101E  4E4F                      20              TRAP       #15
00001020                            21             
00001020  43F9 000010EC             22              LEA        ST_INPUT,A1      Stores user input into memory
00001026  7002                      23              MOVEQ      #2,D0
00001028  4E4F                      24              TRAP       #15
0000102A                            25              
0000102A  4EB9 00001052             26              JSR        ASC_HEX          Convert ascii to hex
00001030  2A43                      27              MOVEA.L    D3,A5         
00001032                            28  
00001032  43F9 000010CB             29  END_ADDR    LEA        EN_ADDR_MSG,A1   Display starting address message
00001038  103C 000E                 30              MOVE.B     #14,D0
0000103C  4E4F                      31              TRAP       #15
0000103E                            32              
0000103E  43F9 0000113C             33              LEA        EN_INPUT,A1      Stores user input into memory
00001044  7002                      34              MOVEQ      #2,D0
00001046  4E4F                      35              TRAP       #15
00001048  4283                      36              CLR.L      D3               Clear D3 so that ending address can be stored
0000104A  4EB9 00001052             37              JSR        ASC_HEX          Branch to ascii to hex convesion 
00001050  2C43                      38              MOVEA.L    D3,A6
00001052                            39  
00001052  0C01 0000                 40  ASC_HEX     CMPI.B      #$0,D1          Check to see if all ascii characters are converted
00001056  6700 002A                 41              BEQ         END
0000105A  1419                      42              MOVE.B     (A1)+,D2         Move first number to data register
0000105C  0C02 0039                 43              CMPI.B      #$39,D2         See if D2 is a number
00001060  6F00 000A                 44              BLE         CON_NUM          
00001064                            45              
00001064  0402 0037                 46  CON_LET     SUBI.B      #$37,D2         Convert ascii to hex letter
00001068  6000 000A                 47              BRA         COUNTER        
0000106C                            48  
0000106C  0402 0030                 49  CON_NUM     SUBI.B      #$30,D2         Convert ascii to hex number
00001070  6000 0002                 50              BRA         COUNTER
00001074                            51  
00001074                            52              
00001074  5301                      53  COUNTER     SUBI.B      #$1,D1          Decrement counter
00001076  D602                      54              ADD.B       D2,D3           Add converted number to rest of convereted address
00001078  0C01 0000                 55              CMPI.B      #$0,D1          Check to see if all ascii characters are converted
0000107C  67D4                      56              BEQ         ASC_HEX        
0000107E  E99B                      57              ROL.L       #4,D3           Move converted address number to the left to add new number.
00001080                            58  
00001080  60D0                      59              BRA         ASC_HEX
00001082                            60  
00001082  4E75                      61  END         RTS
00001084                            62  ********************************************************
00001084                            63  * DISPLAY MESSAGES                                     *
00001084                            64  ********************************************************
00001084                            65  
00001084  =0000000D                 66  CR          EQU     $0D
00001084  =0000000A                 67  LF          EQU     $0A
00001084= 44 69 73 61 73 73 ...     68  INTRO       DC.B    'Disassembler Program for Team Bits',CR,LF,0
000010A9= 50 6C 65 61 73 65 ...     69  ST_ADDR_MSG DC.B    'Please enter a starting address: ',0
000010CB= 50 6C 65 61 73 65 ...     70  EN_ADDR_MSG DC.B    'Please enter an ending address: ',0
000010EC                            71  ST_INPUT    DS.B    80
0000113C                            72  EN_INPUT    DS.B    80
0000118C                            73      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ASC_HEX             1052
CON_LET             1064
CON_NUM             106C
COUNTER             1074
CR                  D
END                 1082
END_ADDR            1032
EN_ADDR_MSG         10CB
EN_INPUT            113C
INTRO               1084
LF                  A
START               1000
START_ADDR          1014
ST_ADDR_MSG         10A9
ST_INPUT            10EC
