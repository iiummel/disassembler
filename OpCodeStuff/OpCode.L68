00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.14.00
Created On: 3/1/2014 9:03:07 PM

00000000                             1      INCLUDE "TEST.X68"
00007000                             2    ORG    $7000
00007000                             3      
00007000                             4    
00007000  2E38 1234                  5    MOVE.L $1234, D7
00007004  2200                       6    MOVE.L D0, D1
00007006                             7    
00007006                             8  
00007006                             9  
00007006                            10  
00007006                            11  
00007006                            12  
00007006                            13  -------------------- end include --------------------
00007006                            14  *-----------------------------------------------------------
00007006                            15  * Title      :  Team Bits Disassembler
00007006                            16  * Written by :  Himanshu Mehru, William Tanna, Igor Ummel
00007006                            17  * Date       :  Who cares? Our code is timeless mofo.
00007006                            18  * Description:  Bish, you know what the fuck dis shiit izz.
00007006                            19  *-----------------------------------------------------------
00001000                            20      ORG    $1000
00001000                            21  START:
00001000  3A7C 7000                 22      MOVE.W  #$7000, A5
00001004  3C7C 7004                 23      MOVE.W  #$7004, A6
00001008  47F9 0000112A             24      LEA     goodbuffer, A3
0000100E                            25  
0000100E                            26  ********************************************************
0000100E                            27  * OP CODE                                              *
0000100E                            28  ********************************************************
0000100E  3C1D                      29      MOVE.W  (A5)+, D6       ;Move instruction to D6
00001010  4EB9 00001016             30      JSR     FIRST4BITS      ;Get the first 4 bits of the instruction
00001016                            31      
00001016                            32      
00001016                            33  FIRST4BITS
00001016  3A06                      34      MOVE.W  D6, D5          ;Move the instruction so we can shift it
00001018  E04D                      35      LSR.W   #8, D5
0000101A  E84D                      36      LSR.W   #4, D5
0000101C  CAFC 0008                 37      MULU    #8, D5          ;Offset D5 to show the word binary for the instruction
00001020  41F9 0000102C             38      LEA     INSTTABLE, A0   ;Set the table to A0 so we know where to jump to
00001026  4EB0 5000                 39      JSR     00(A0,D5)       ;Set jumptable
0000102A  4E75                      40      RTS
0000102C                            41  
0000102C                            42  INSTTABLE
0000102C  4EB9 0000109A             43      JSR     INSTR0000       *Call function for instructions that start with 0000
00001032  4E75                      44      RTS
00001034  4EB9 0000109C             45      JSR     INSTR0001       *Call function for instructions that start with 0001
0000103A  4E75                      46      RTS
0000103C  4EB9 000010C0             47      JSR     INSTR0010       *Call function for instructions that start with 0010
00001042  4E75                      48      RTS
00001044  4EB9 000010E4             49      JSR     INSTR0011       *Call function for instructions that start with 0011
0000104A  4E75                      50      RTS
0000104C  4EB9 00001108             51      JSR     INSTR0100       *Call function for instructions that start with 0100
00001052  4E75                      52      RTS
00001054  4EB9 0000110A             53      JSR     INSTR0101       *Call function for instructions that start with 0101
0000105A  4E75                      54      RTS
0000105C  4EB9 0000110C             55      JSR     INSTR0110       *Call function for instructions that start with 0110
00001062  4E75                      56      RTS
00001064  4EB9 0000110E             57      JSR     INSTR0111       *Call function for instructions that start with 0111
0000106A  4E75                      58      RTS
0000106C  4EB9 00001110             59      JSR     INSTR1000       *Call function for instructions that start with 1000
00001072  4E75                      60      RTS
00001074  4EB9 00001112             61      JSR     INSTR1001       *Call function for instructions that start with 1001
0000107A  4E75                      62      RTS
0000107C  4EB9 00001114             63      JSR     INSTR1011       *Call function for instructions that start with 1011
00001082  4E75                      64      RTS
00001084  4EB9 00001116             65      JSR     INSTR1100       *Call function for instructions that start with 1100
0000108A  4E75                      66      RTS
0000108C  4EB9 00001118             67      JSR     INSTR1110       *Call function for instructions that start with 1110
00001092  4E75                      68      RTS
00001094  4EB9 0000111A             69      JSR     INSTR1101       *Call function for instructions that start with 1101
0000109A                            70  
0000109A                            71  
0000109A                            72  ********************************************************
0000109A                            73  * 0000 - ADDI, ANDI, BCHG, CMPI, EORI INSTRUCTION'S    
0000109A                            74  ********************************************************
0000109A  4E75                      75  INSTR0000   RTS
0000109C                            76  ********************************************************
0000109C                            77  * 0001 - MOVE.B INSTRUCTION                            
0000109C                            78  ********************************************************
0000109C                            79  INSTR0001   
0000109C  16FC 004D                 80      MOVE.B  #'M',(A3)+
000010A0  16FC 004F                 81      MOVE.B  #'O',(A3)+
000010A4  16FC 0056                 82      MOVE.B  #'V',(A3)+
000010A8  16FC 0045                 83      MOVE.B  #'E',(A3)+
000010AC  16FC 002E                 84      MOVE.B  #'.',(A3)+
000010B0  16FC 0042                 85      MOVE.B  #'B',(A3)+
000010B4  16FC 0020                 86      MOVE.B  #' ',(A3)+
000010B8  4EB9 0000111C             87      JSR     EACODE
000010BE  4E75                      88      RTS
000010C0                            89  ********************************************************
000010C0                            90  * 0010 - MOVE.L INSTRUCTION                            
000010C0                            91  ********************************************************
000010C0                            92  INSTR0010
000010C0  16FC 004D                 93      MOVE.B  #'M',(A3)+
000010C4  16FC 004F                 94      MOVE.B  #'O',(A3)+
000010C8  16FC 0056                 95      MOVE.B  #'V',(A3)+
000010CC  16FC 0045                 96      MOVE.B  #'E',(A3)+
000010D0  16FC 002E                 97      MOVE.B  #'.',(A3)+
000010D4  16FC 004C                 98      MOVE.B  #'L',(A3)+
000010D8  16FC 0020                 99      MOVE.B  #' ',(A3)+
000010DC  4EB9 0000111C            100      JSR     EACODE
000010E2  4E75                     101      RTS
000010E4                           102  ********************************************************
000010E4                           103  * 0011 - MOVE.W INSTRUCTION                            
000010E4                           104  ********************************************************
000010E4                           105  INSTR0011
000010E4  16FC 004D                106      MOVE.B  #'M',(A3)+
000010E8  16FC 004F                107      MOVE.B  #'O',(A3)+
000010EC  16FC 0056                108      MOVE.B  #'V',(A3)+
000010F0  16FC 0045                109      MOVE.B  #'E',(A3)+
000010F4  16FC 002E                110      MOVE.B  #'.',(A3)+
000010F8  16FC 0057                111      MOVE.B  #'W',(A3)+
000010FC  16FC 0020                112      MOVE.B  #' ',(A3)+
00001100  4EB9 0000111C            113      JSR     EACODE
00001106  4E75                     114      RTS
00001108                           115  ********************************************************
00001108                           116  * 0100 - CLR, JSR, LEA, MOVEM, RTS INSTRUCTION'S                                     
00001108                           117  ********************************************************
00001108  4E75                     118  INSTR0100   RTS
0000110A                           119  ********************************************************
0000110A                           120  * 0101 - SUBQ INSTRUCTION                                     
0000110A                           121  ********************************************************
0000110A  4E75                     122  INSTR0101   RTS
0000110C                           123  ********************************************************
0000110C                           124  * 0110 - BGT, BLE, BVS INSTRUCTION'S                                     
0000110C                           125  ********************************************************
0000110C  4E75                     126  INSTR0110   RTS
0000110E                           127  ********************************************************
0000110E                           128  * 0111 - MOVEQ INSTRUCTION                                     
0000110E                           129  ********************************************************
0000110E  4E75                     130  INSTR0111   RTS
00001110                           131  ********************************************************
00001110                           132  * 1000 - DIVU INSTRUCTION                                     
00001110                           133  ********************************************************
00001110  4E75                     134  INSTR1000   RTS
00001112                           135  ********************************************************
00001112                           136  * 1001 - SUB, SUBA INSTRUCTION'S                                     
00001112                           137  ********************************************************
00001112  4E75                     138  INSTR1001   RTS
00001114                           139  ********************************************************
00001114                           140  * 1011 - CMP, CMPA, EOR INSTRUCTION'S                                     
00001114                           141  ********************************************************
00001114  4E75                     142  INSTR1011   RTS
00001116                           143  ********************************************************
00001116                           144  * 1100 - AND, MULS INSTRUCTION'S                                     
00001116                           145  ********************************************************
00001116  4E75                     146  INSTR1100   RTS
00001118                           147  ********************************************************
00001118                           148  * 1110 - ASR, LSL, ROL INSTRUCTION'S                                     
00001118                           149  ********************************************************
00001118  4E75                     150  INSTR1110   RTS
0000111A                           151  ********************************************************
0000111A                           152  * 1101 - ADD, ADDA INSTRUCTION'S                                     
0000111A                           153  ********************************************************
0000111A  4E75                     154  INSTR1101   RTS
0000111C                           155  
0000111C                           156  
0000111C                           157  
0000111C                           158  ********************************************************
0000111C                           159  * EA CODE                                              *
0000111C                           160  ********************************************************
0000111C                           161  EACODE
0000111C  43F9 0000112A            162      LEA     goodbuffer, A1
00001122  700D                     163      MOVEQ   #13, D0
00001124  4E4F                     164      TRAP    #15
00001126                           165      
00001126                           166  
00001126  FFFF FFFF                167      SIMHALT             ; halt simulator
0000112A= 50                       168  goodbuffer  DC.B    80    
0000112B                           169      
0000112B                           170      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
EACODE              111C
FIRST4BITS          1016
GOODBUFFER          112A
INSTR0000           109A
INSTR0001           109C
INSTR0010           10C0
INSTR0011           10E4
INSTR0100           1108
INSTR0101           110A
INSTR0110           110C
INSTR0111           110E
INSTR1000           1110
INSTR1001           1112
INSTR1011           1114
INSTR1100           1116
INSTR1101           111A
INSTR1110           1118
INSTTABLE           102C
START               1000
